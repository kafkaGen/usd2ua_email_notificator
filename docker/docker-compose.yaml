services:
  db:
    image: postgres:16.3
    container_name: postgres_container
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../initdb:/docker-entrypoint-initdb.d
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  currency_mail_api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: currency_mail_api_container
    depends_on:
      db:
        condition: service_healthy
    networks:
      - net
    environment:
      APP_PORT: ${APP_PORT}
      API_KEY: ${API_KEY}
      URL: ${URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
    ports:
      - 8080:${APP_PORT}

  currency_mail_cron:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cron
    container_name: currency_mail_cron_container
    depends_on: 
      - currency_mail_api
    networks:
      - net
    environment:
      API_KEY: ${API_KEY}
      URL: ${URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}

volumes:
  postgres_data:

networks:
  net: